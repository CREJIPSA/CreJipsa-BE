name: CI/CD Dev

on:
  push:
    branches: ["develop","feat/CICD"]

  pull_request:
    branches: ["develop","feat/CICD"]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout source
        uses: actions/checkout@v4

      - name: 2. Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: 3. Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 4. Grant Permission to Gradle
        run: chmod +x gradlew

      - name: 5. Build JAR
        run: ./gradlew clean build -x test

      - name: 6. Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: 7. Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/server:latest

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout source
        uses: actions/checkout@v4

      - name: 2. Create .env.dev
        run: |
          echo "${{ secrets.DEV_ENV }}" > .env.dev
          echo " .env.dev 생성 완료:"
          cat .env.dev
          echo " 현재 디렉토리 목록:"
          ls -al

      - name: 3. Send files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ".env.dev,docker/docker-compose.dev.yml"
          target: "/home/ubuntu/CreJipsa-BE/docker/"

      - name: 4. SSH into EC2 and Deploy (Dev)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/CreJipsa-BE/docker/
            docker pull ${{ secrets.DOCKER_USERNAME }}/server:latest
            docker compose -f docker-compose.dev.yml down
            docker compose -f docker-compose.dev.yml up -d
